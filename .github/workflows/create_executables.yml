name: Build and Release Executables

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Enter the version (e.g., v1.0.0)"
        required: true

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64, arm64]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Build executable with PyInstaller
        run: |
          pyinstaller --noconfirm --onefile grep-docx.py

      - name: Prepare artifact filename
        run: |
          mkdir -p builds
          mv dist/grep-docx builds/grep-docx-${{ matrix.platform }}-${{ matrix.arch }}
        shell: bash

      - name: Upload build artifact for workflow release step
        uses: actions/upload-artifact@v4
        with:
          name: grep-docx-${{ matrix.platform }}-${{ matrix.arch }}
          path: builds/*

      - name: Commit artifact to artifacts branch
          run: |
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            # ensure artifacts branch exists locally
            git fetch origin artifacts || true
            if git show-ref --verify --quiet refs/heads/artifacts; then
              git checkout artifacts
              git reset --hard origin/artifacts || true
            else
              git checkout --orphan artifacts
              git rm -rf . || true
            fi
            # copy only this run's built file into path for this matrix
            mkdir -p artifacts/${{ matrix.platform }}
            cp -R built/* artifacts/${{ matrix.platform }}/
            # stage only the artifacts directory to avoid clobbering other files
            git add -A artifacts/${{ matrix.platform }}
            if git diff --cached --quiet; then
              echo "No changes to commit"
            else
              git commit -m "Add build: ${{ matrix.platform }}-${{ matrix.arch }} - ${{ github.sha }}"
              git push --set-upstream origin artifacts --force
            fi
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          shell: bash