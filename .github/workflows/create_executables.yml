name: Build and Release Executables

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Enter the version (e.g., v1.0.0)"
        required: true

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        # https://github.com/actions/runner-images
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64, arm64]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Build executable with PyInstaller
        run: |
          pyinstaller --noconfirm --onefile grep-docx.py

      - name: Prepare artifact filename
        run: |
          mkdir -p builds
          mv dist/grep-docx builds/grep-docx-${{ runner.os }}-${{ matrix.arch }}
        shell: bash

      - name: Upload build artifact for workflow release step
        uses: actions/upload-artifact@v4
        with:
          name: grep-docx-${{  runner.os  }}-${{ matrix.arch }}
          path: builds/*


 release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Normalize filenames and make executables runnable
        run: |
          # report what files we got
          for f in *; do
            echo "found: $f"
          done
          chmod +x grep-docx-linux-* grep-docx-macos-* || true
        shell: bash

      - name: Commit artifacts to artifacts branch (single writer)
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # fetch remote artifacts branch if it exists
          git fetch origin artifacts || true

          if git show-ref --verify --quiet refs/heads/artifacts; then
            git checkout artifacts
            git reset --hard origin/artifacts || true
          else
            git checkout --orphan artifacts
            git rm -rf . || true
          fi

          # copy all downloaded artifacts into artifacts/ and commit once
          mkdir -p artifacts
          # downloaded artifacts are in the job workspace root
          cp -R ./* artifacts/ || true
          git add -A artifacts
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Add builds for ${{ github.sha }} (trigger: ${{ github.event.inputs.version }})"
            git push --set-upstream origin artifacts --force-with-lease
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
